require 'sequel'

class Role < Sequel::Model
  many_to_many :accounts, join_table: :account_roles
  many_to_many :permissions, join_table: :role_permissions

  def assign_permission(permission_name)
    permission = Permission.find(name: permission_name)
    add_permission(permission) if permission && !permissions.include?(permission)
  end

  def delete_permission(permission)
    remove_permission(permission) if permission && permissions.include?(permission)
  end
end

# Table: roles
# Columns:
#  id          | integer | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  name        | text    | NOT NULL
#  description | text    |
# Indexes:
#  roles_pkey     | PRIMARY KEY btree (id)
#  roles_name_key | UNIQUE btree (name)
# Referenced By:
#  account_roles    | account_roles_role_id_fkey    | (role_id) REFERENCES roles(id)
#  role_permissions | role_permissions_role_id_fkey | (role_id) REFERENCES roles(id)
